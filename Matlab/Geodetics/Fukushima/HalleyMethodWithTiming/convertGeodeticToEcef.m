function                                                                     ...
[                                                                            ...
  xRectangularMeters,                                                        ...
  yRectangularMeters,                                                        ...
  zRectangularMeters                                                         ...
] =                                                                          ...
convertGeodeticToEcef                                                        ...
       (                                                                     ...
         varargin                                                            ...
       )
%===============================================================================
%|
%|  FUNCTION:
%|
%|    convertGeodeticToEcef
%|
%|------------------------------------------------------------------------------
%|
%|  PURPOSE:
%|
%|    Convert:
%|      Geodetic   North Latitude,
%|      Geocentric East  Longitude
%|      Geodetic   Altitude
%|    to Earth Centered Earth Fixed (ECEF) rectangular coordinates.
%|
%|------------------------------------------------------------------------------
%|
%|  INPUTS:
%|
%|    earthEquatorialRadiusMeters
%|      Length of Earth equatorial radius.
%|      Also length of Earth ellipsoid semi-major axis.
%|      Units:  [meters]
%|
%|    earthEllipsoidalEccentricitySquared
%|      Earth ellipsoid eccentricity squared.
%|      Units:  [nondimensional]
%|
%|    geodeticNorthLatitudeRadians
%|      The geodetic North latitude.
%|      Northern hemisphere is positive.
%|      Units:  [radians]
%|
%|    geocentricEastLongitudeRadians
%|      The geocentric East longitude.
%|      Eastward is positive.
%|      Units:  [radians]
%|
%|    geodeticAltitudeMeters
%|      The geodetic altitude above the specified reference ellipsoid.
%|      Units:  [meters]
%|
%|------------------------------------------------------------------------------
%|
%|  OUTPUT:
%|
%|    xRectangularMeters
%|      The Earth Centered Earth Fixed (ECEF) X Rectangular position
%|      Units:  [meters].
%|
%|    yRectangularMeters
%|      The Earth Centered Earth Fixed (ECEF) Y Rectangular position
%|      Units:  [meters].
%|
%|    zRectangularMeters
%|      The Earth Centered Earth Fixed (ECEF) Z Rectangular position
%|      Units:  [meters].
%|
%|  RETURNED VALUE:
%|
%|    None.
%|
%|------------------------------------------------------------------------------
%|
%|  NOTE(s):
%|
%|    [ 1 ] The input argument list is specified as Matlab 'varargin'
%|          so that this function can manage everything about the input
%|          argument list.
%|          If the input argument list was provided explicitly and a user
%|          provided too many input arguments, then Matlab would generate
%|          an error message and this function's error handling would
%|          never be invoked.
%|
%|------------------------------------------------------------------------------
%|
%|  REFERENCE(s):
%|
%|    [ 1 ]  "Geographic coordinate conversion",
%|           "Coordinate system conversion",
%|           "From geodetic to ECEF coordinates"
%|           https://en.wikipedia.org/wiki/Geographic_coordinate_conversion
%|
%|    [ 2 ]  "Geometric Geodesy, Part A",
%|           "A set of lecture notes which are an introduction to
%|            ellipsoidal geometry related to geodesy.",
%|            R. E. Deakin and M. N. Hunter,
%|            School of Mathematical and Geospatial Sciences,
%|            RMIT University,
%|            Melbourne, Australia,
%|            January 2013
%|            www.mygeodesy.id.au/documents/Geometric%20Geodesy%20A(2013).pdf
%|
%|------------------------------------------------------------------------------
%|
%|  USAGE:
%|
%|    [                                                    ...
%|      xRectangularMeters,                                ...
%|      yRectangularMeters,                                ...
%|      zRectangularMeters                                 ...
%|    ] = convertGeodeticToEcef                            ...
%|               (                                         ...
%|                 earthEquatorialRadiusMeters,            ...
%|                 earthEllipsoidalEccentricitySquared,    ...
%|                 geodeticNorthLatitudeRadians,           ...
%|                 geocentricEastLongitudeRadians,         ...
%|                 geodeticAltitudeMeters                  ...
%|               );
%|
%===============================================================================

%===============================================================================
%        1         2         3         4         5         6         7         8
%2345678901234567890123456789012345678901234567890123456789012345678901234567890
%===============================================================================

%{------------------------------------------------------------------------------
   expectedNumberInputArguments   =  5;
   expectedNumberOutputArguments  =  3;
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     actualNumberInputArguments   =  nargin;
     actualNumberOutputArguments  =  nargout;
%-------------------------------------------------------------------------------
   if( actualNumberInputArguments == expectedNumberInputArguments )
    %{--------------------------------------------------------------------------
    %  Have encountered expected number of function input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Check number of function output arguments.
    %---------------------------------------------------------------------------
       if( actualNumberOutputArguments == expectedNumberOutputArguments )
        %{----------------------------------------------------------------------
        %  Have encountered expected number of function output arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Extract input arguments from input variable cell array.
        %-----------------------------------------------------------------------
           earthEquatorialRadiusMeters         = varargin{ 1 };
           earthEllipsoidalEccentricitySquared = varargin{ 2 };
           geodeticNorthLatitudeRadians        = varargin{ 3 };
           geocentricEastLongitudeRadians      = varargin{ 4 };
           geodeticAltitudeMeters              = varargin{ 5 };
        %-----------------------------------------------------------------------
        %  Continue Geodetic to ECEF conversion processing.
        %-----------------------------------------------------------------------
           [                                                                 ...
             xRectangularMeters,                                             ...
             yRectangularMeters,                                             ...
             zRectangularMeters                                              ...
           ] = continueConvertGeodeticToEcefProcessing                       ...
                       (                                                     ...
                         earthEquatorialRadiusMeters,                        ...
                         earthEllipsoidalEccentricitySquared,                ...
                         geodeticNorthLatitudeRadians,                       ...
                         geocentricEastLongitudeRadians,                     ...
                         geodeticAltitudeMeters                              ...
                       );
        %}----------------------------------------------------------------------
       else
        %{----------------------------------------------------------------------
        %  Have not encountered expected number of function output arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Generate a purpose message.
        %-----------------------------------------------------------------------
           generateConvertGeodeticToEcefPurposeMessage(  );
        %-----------------------------------------------------------------------
        %  Generate a usage message.
        %-----------------------------------------------------------------------
           generateConvertGeodeticToEcefUsageMessage(  );
        %-----------------------------------------------------------------------
        %  Generate an error message.
        %-----------------------------------------------------------------------
           STDOUT = 1;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           fprintf                                                           ...
           (                                                                 ...
             STDOUT,                                                         ...
             [                                                               ...
               '\n\n\n'                                                      ...
               '%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                                ...
               '%s%d\n'                                                      ...
               '%s%d\n'                                                      ...
               '%s\n%s\n%s\n%s\n%s\n'                                        ...
               '\n\n\n'                                                      ...
             ],                                                              ...
             '============================================================', ...
             '|',                                                            ...
             '|  ERROR:',                                                    ...
             '|',                                                            ...
             '|    Have encountered unexpected number of function output',   ...
             '|    arguments.',                                              ...
             '|',                                                            ...
             '|    Expected number function output arguments:-->',           ...
             expectedNumberOutputArguments,                                  ...
             '|      Actual number function output arguments:-->',           ...
               actualNumberOutputArguments,                                  ...
             '|',                                                            ...
             '|    This is an error.',                                       ...
             '|    Program will terminate.',                                 ...
             '|',                                                            ...
             '============================================================'  ...
           );
        %-----------------------------------------------------------------------
        %  Terminate the program.
        %-----------------------------------------------------------------------
           error                                                             ...
             (                                                               ...
               [                                                             ...
                 'Have encountered unexpected number of function '           ...
                 'output arguments.'                                         ...
               ]                                                             ...
             );
        %}----------------------------------------------------------------------
       end;
    %}--------------------------------------------------------------------------
   else
    %{--------------------------------------------------------------------------
    %  Have not encountered expected number of function input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Generate a purpose message.
    %---------------------------------------------------------------------------
       generateConvertGeodeticToEcefPurposeMessage(  );
    %---------------------------------------------------------------------------
    %  Generate a usage message.
    %---------------------------------------------------------------------------
       generateConvertGeodeticToEcefUsageMessage(  );
    %---------------------------------------------------------------------------
    %  Generate an error message.
    %---------------------------------------------------------------------------
       STDOUT = 1;
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       fprintf                                                               ...
       (                                                                     ...
         STDOUT,                                                             ...
         [                                                                   ...
           '\n\n\n'                                                          ...
           '%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                                    ...
           '%s%d\n'                                                          ...
           '%s%d\n'                                                          ...
           '%s\n%s\n%s\n%s\n%s\n'                                            ...
           '\n\n\n'                                                          ...
         ],                                                                  ...
         '============================================================',     ...
         '|',                                                                ...
         '|  ERROR:',                                                        ...
         '|',                                                                ...
         '|    Have encountered unexpected number of function input',        ...
         '|    arguments.',                                                  ...
         '|',                                                                ...
         '|    Expected number function input arguments:-->',                ...
         expectedNumberInputArguments,                                       ...
         '|      Actual number function input arguments:-->',                ...
           actualNumberInputArguments,                                       ...
         '|',                                                                ...
         '|    This is an error.',                                           ...
         '|    Program will terminate.',                                     ...
         '|',                                                                ...
         '============================================================'      ...
       );
    %---------------------------------------------------------------------------
    %  Terminate the program.
    %---------------------------------------------------------------------------
       error                                                                 ...
         ( 'Have encountered unexpected number of function input arguments.' );
    %}--------------------------------------------------------------------------
   end;
%------------------------------------------------------------------------------- 
   return;
%}------------------------------------------------------------------------------


%===============================================================================
function                                                                     ...
[                                                                            ...
  xRectangularMeters,                                                        ...
  yRectangularMeters,                                                        ...
  zRectangularMeters                                                         ...
] =                                                                          ...
continueConvertGeodeticToEcefProcessing                                      ...
        (                                                                    ...
          earthEquatorialRadiusMeters,                                       ...
          earthEllipsoidalEccentricitySquared,                               ...
          geodeticNorthLatitudeRadians,                                      ...
          geocentricEastLongitudeRadians,                                    ...
          geodeticAltitudeMeters                                             ...
        )
%{------------------------------------------------------------------------------
     sineOfGeodeticNorthLatitude   = sin( geodeticNorthLatitudeRadians   );
   cosineOfGeodeticNorthLatitude   = cos( geodeticNorthLatitudeRadians   );
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     sineOfGeocentricEastLongitude = sin( geocentricEastLongitudeRadians );
   cosineOfGeocentricEastLongitude = cos( geocentricEastLongitudeRadians );
%-------------------------------------------------------------------------------
% 
%  NOTE(s):
% 
%    [ 1 ]  The value of the prime vertical radius of curvature, N, is
%           derived in Equation (48) of Section 1.1.6
%           "Geometry of the ellipse" pages 12 through 15 of
%           Reference [2].
% 
%-------------------------------------------------------------------------------
   N                   = earthEquatorialRadiusMeters /                       ...
                         sqrt                                                ...
                          (                                                  ...
                            1.0E0 +                                          ...
                            (                                                ...
                              -earthEllipsoidalEccentricitySquared *         ...
                               sineOfGeodeticNorthLatitude         *         ...
                               sineOfGeodeticNorthLatitude                   ...
                            )                                                ...
                          );
%-------------------------------------------------------------------------------
   rho  = N + geodeticAltitudeMeters;
   rhoz = ( ( 1.0E0 - earthEllipsoidalEccentricitySquared ) * N ) +          ...
          geodeticAltitudeMeters;
%-------------------------------------------------------------------------------
%  Check the length quantities.
%-------------------------------------------------------------------------------
   if(                                                                       ...
       ( rho  > 0.0E0 ) &&                                                   ...
       ( rhoz > 0.0E0 )                                                      ...
     )
    %{--------------------------------------------------------------------------
    %  The length quantities are all positive.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Continue the computation of retangular coordinates.
    %
    %  NOTE(s):
    %
    %    [ 1 ]  The Earth Centered Earth Fixed (ECEF) coordinates
    %           { x, y, z } are computed via Equation (277) on page 94
    %           Section 2.1
    %           "Cartesian coords x,y,z given geodetic coords"
    %           of Reference [2].
    %
    %    [ 2 ]  The Earth Centered Earth Fixed (ECEF) coordinates
    %           { x, y, z } are derived on pages 92, 93 and 94 of
    %           Chapter 2
    %           "Transformations Between Cartesian Coordinates x,y,z
    %            and Geodetic Coordinates"
    %           of Reference [2].
    %
    %---------------------------------------------------------------------------
       r                  = rho  * cosineOfGeodeticNorthLatitude;
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       xRectangularMeters = r    * cosineOfGeocentricEastLongitude;
       yRectangularMeters = r    *   sineOfGeocentricEastLongitude;
       zRectangularMeters = rhoz *   sineOfGeodeticNorthLatitude;
    %}--------------------------------------------------------------------------
   else
    %{--------------------------------------------------------------------------
    %  The length quantities are not all positive.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Assign invalid values to the output arguments.
    %---------------------------------------------------------------------------
       xRectangularMeters = NaN;
       yRectangularMeters = NaN;
       zRectangularMeters = NaN;
    %}-------------------------------------------------------------------------
   end;
%------------------------------------------------------------------------------- 
   return;
%}------------------------------------------------------------------------------


