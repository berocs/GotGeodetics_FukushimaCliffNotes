function                                                                     ...
[                                                                            ...
  executionTimeOfTrialFunctionCallsMicroSeconds,                             ...
  maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs,                     ...
  maximumGeodeticAltitudeAbsoluteErrorNanoMeters                             ...
] =                                                                          ...
executeOneTrialConvertEcefToGeodetic                                         ...
       (                                                                     ...
          specifiedFixedTrueEastGeocentricLongitudeDegrees                   ...
       )
%===============================================================================
%|
%|  FUNCTION:
%|
%|    executeOneTrialConvertEcefToGeodetic
%|
%|------------------------------------------------------------------------------
%|
%|  PURPOSE:
%|
%|    To perform one trial of converting Earth-Center Earth-Fixed (ECEF)
%|    retangular coordinates to geodetic coordinates for a specified
%|    reference ellipsoid.
%|
%|------------------------------------------------------------------------------
%|
%|  INPUT(s):
%|
%|    specifiedFixedTrueEastGeocentricLongitudeDegrees
%|      The specified true geocentric East longitude to be used for
%|      the current trial.
%|      UNIT(s):  [degrees]
%|
%|------------------------------------------------------------------------------
%|
%|  OUTPUT(s):
%|
%|    executionTimeOfTrialFunctionCallsMicroSeconds
%|      The sum of the execution times of each of the
%|      'convertEcefToGeodetic' function calls in the
%|      current timing trial.
%|      UNIT(s):  [microseconds]
%|
%|    maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs
%|     The maximum geodetic north latitude absolute error over all
%|     'convertEcefToGeodetic' function calls in the current
%|     timing trial.
%|     UNIT(s):  [microarcseconds]
%|
%|    maximumGeodeticAltitudeAbsoluteErrorNanoMeters
%|    The maximum geodetic altitude absolute error over all
%|     'convertEcefToGeodetic' function calls in the current
%|     timing trial.
%|     UNIT(s):  [nanometers]
%|
%|------------------------------------------------------------------------------
%|
%|  A TRIAL CONSISTS OF:
%|
%|    [ 1 ]  Performing the following 32 ECEF to Geodetic conversions.
%|
%|    [ 2 ]  Converting ECEF rectangular coordinates at each 15
%|           degrees of geodetic latitude along the specified
%|           geocentric longitude meridian from the equator
%|           to the north pole.
%|
%|    [ 3 ]  At each latitude, perform the conversion at four
%|           different geodetic altitudes.
%|
%|------------------------------------------------------------------------------
%|
%|  METHOD OF EACH ECEF TO GEODETIC CONVERSION:
%|
%|    [ 1 ]  Uses the economic third-order Halley's method to
%|           approximate a solution for the general non-linear
%|           geodetic equation numerically.
%|
%|    [ 2 ]  Uses only one iteration of the iterative Halley's
%|           method to achieve near double precision accuracy.
%|
%|    [ 3 ]  Uses a technique to avoid division operations which
%|           significantly accelerates the backward transformation
%|           without degrading the precision.
%|
%|------------------------------------------------------------------------------
%|
%|  STRATEGY:
%|
%|    [ 1 ]  Define true geodetic latitude and altitude
%|           values along the 45-degree East geocentric
%|           longitude meridian.
%|
%|    [ 2 ]  Generate true rectangular values based on the
%|           true geodetic latitude, true geodetic altitude
%|           and constant geocentric longitude values.
%|
%|    [ 3 ]  Compute estimated geodetic values based on the
%|           true rectangular values.
%|
%|    [ 4 ]  Report the differences between the defined true
%|           geodetic values and the estimated geodetic
%|           values.
%|
%|------------------------------------------------------------------------------
%|
%|  AUTHOR(s):
%|
%|   [ 1 ]  Toshio Fukushima <Toshio.Fukushima@nao.ac.jp>
%|          National Astronomical Observatory of Japan (NAOJ)
%|          Address:  2-21-1, Ohsawa, Mitaka, Tokyo 181-8588, Japan
%|          Phone:    +81-422-34-3613
%|
%|------------------------------------------------------------------------------
%|
%|  REFERENCE(s):
%|
%|   [ 1 ]  "Transformation from Cartesian to geodetic
%|           coordinates accelerated by Halley''s method",
%|          Toshio Fukushima,
%|          Journal Of Geodesy (2006),
%|          Volume 79,
%|          Pages 689-693
%|
%|   [ 2 ]  "Fast transform from geocentric to geodetic coordinates",
%|          Toshio Fukushima,
%|          Journal Of Geodesy (1999),
%|          Volume 73,
%|          Pages 603â€“610
%|
%|   [ 3 ]  "Geometric Geodesy, Part A",
%|          "A set of lecture notes which are an introduction to
%|           ellipsoidal geometry related to geodesy.",
%|           R. E. Deakin and M. N. Hunter,
%|           School of Mathematical and Geospatial Sciences,
%|           RMIT University,
%|           Melbourne, Australia,
%|           January 2013
%|           www.mygeodesy.id.au/documents/Geometric%20Geodesy%20A(2013).pdf
%|
%|   [ 4 ]  'Various parameterizations of "latitude" equation -
%|           Cartesian to geodetic coordinates transformation',
%|           Marcin Ligas,
%|           Journal of Geodetic Science,
%|           Pages 87 - 94,
%|           2013
%|
%|   [ 5 ]  "In numerical analysis, Halley's method is a root-finding
%|           algorithm used for functions of one real variable with a
%|           continuous second derivative.",
%|          "The rate of convergence of the iterative Halley's method
%|           is cubic.",
%|          "There exist multidimensional versions of Halley's method.",
%|          wikipedia.org/wiki/Halley's_method`
%|
%===============================================================================

%===============================================================================
%        1         2         3         4         5         6         7         8
%2345678901234567890123456789012345678901234567890123456789012345678901234567890
%===============================================================================

%{------------------------------------------------------------------------------
   executionTimeOfTrialFunctionCallsMicroSeconds = 0.0;
%-------------------------------------------------------------------------------
   STDOUT                            =  1;
%-------------------------------------------------------------------------------
   piRadians                         = pi;
   radiansPerDegree                  = piRadians / 180.0;
   degreesPerRadian                  = 180.0     / piRadians;
   secondsPerMinute                  =  60.0;
   minutesPerDegree                  =  60.0;
   microArcSecondsPerSecond          =   1.0E6;
   microArcSecondsPerDegree          = microArcSecondsPerSecond *            ...
                                       secondsPerMinute         *            ...
                                       minutesPerDegree;
   microArcSecondsPerRadian          = degreesPerRadian         *            ...
                                       microArcSecondsPerDegree;
   nanoMetersPerMeter                = 1.0E9;
   microSecondsPerSecond             = 1.0E6;
%-------------------------------------------------------------------------------
% 
%  GRS1980 System
% 
%-------------------------------------------------------------------------------
   earthEquatorialRadiusMeters             = 6378137.0E0;
   inverseEarthEllipsoidalFlatteningFactor =     298.257222101E0;
%-------------------------------------------------------------------------------
   earthEllipsoidalFlatteningFactor    =                                     ...
                             1.0E0 / inverseEarthEllipsoidalFlatteningFactor;
   earthEllipsoidalEccentricitySquared =                                     ...
                             ( 2.0E0 - earthEllipsoidalFlatteningFactor )    ...
                             *                                               ...
                             earthEllipsoidalFlatteningFactor;
%-------------------------------------------------------------------------------
   specifiedFixedTrueEastGeocentricLongitudeRadians =                        ...
                        radiansPerDegree *                                   ...
                        specifiedFixedTrueEastGeocentricLongitudeDegrees;
%-------------------------------------------------------------------------------
%
%  Generate purpose message.
%
%-------------------------------------------------------------------------------
   generateTestProgramPurposeMessage(  );
%-------------------------------------------------------------------------------
% 
%  Generate header for output.
% 
%-------------------------------------------------------------------------------
   generateTestProgramOutputHeader                                           ...
           (                                                                 ...
             specifiedFixedTrueEastGeocentricLongitudeDegrees                ...
           );
%-------------------------------------------------------------------------------
   deltaLatitudeDegrees = 15.0;
   minimumLatitudeIndex = -1;
   maximumLatitudeIndex =  6;
   minimumAltitudeIndex =  0;
   maximumAltitudeIndex =  3;
%-------------------------------------------------------------------------------
   TEN_KILOMETER_IN_METERS            =   10000.0;
   ONE_THOUSAND_KILOMETERS_IN_METERS  = 1000000.0;
%-------------------------------------------------------------------------------
   minimumTrueGeodeticLatitudeDegrees =  0.000000001E0;
   maximumTrueGeodeticLatitudeDegrees = 89.999999999E0;
%-------------------------------------------------------------------------------
   trialExecutionTimeSeconds = 0.0;
%-------------------------------------------------------------------------------
   maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs = 0.0;
   maximumGeodeticAltitudeAbsoluteErrorNanoMeters        = 0.0;
%-------------------------------------------------------------------------------
%  Loop over Geodetic Latitude values.
%-------------------------------------------------------------------------------
   for(                                                                      ...
        latitudeIndex = minimumLatitudeIndex : maximumLatitudeIndex          ...
      )
     %{-------------------------------------------------------------------------
        trueGeodeticNorthGeodeticDegrees = latitudeIndex *                   ...
                                           deltaLatitudeDegrees;
     %--------------------------------------------------------------------------
     %  Include Near-Equator/Polar Cases 
     %--------------------------------------------------------------------------
        trueGeodeticNorthGeodeticDegrees =                                   ...
                         min(                                                ...
                              maximumTrueGeodeticLatitudeDegrees,            ...
                              max(                                           ...
                                   trueGeodeticNorthGeodeticDegrees,         ...
                                   minimumTrueGeodeticLatitudeDegrees        ...
                                 )                                           ...
                            );
     %--------------------------------------------------------------------------
        trueGeodeticNorthGeodeticRadians = radiansPerDegree *                ...
                                           trueGeodeticNorthGeodeticDegrees;
     %--------------------------------------------------------------------------
     %  Loop over Geodetic Altitude values.
     %--------------------------------------------------------------------------
        for(                                                                 ...
             altitudeIndex  =  minimumAltitudeIndex : maximumAltitudeIndex   ...
           )
          %{--------------------------------------------------------------------
             trueGeodeticAltitudeMeters = 0.0;
          %---------------------------------------------------------------------
             if( altitudeIndex == minimumAltitudeIndex )
              %{----------------------------------------------------------------
              %  At minimum altitude index.
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
              %  Set the current true geodetic altitude to a minimum value.
              %-----------------------------------------------------------------
                 trueGeodeticAltitudeMeters = -10000.0E0;
              %}----------------------------------------------------------------
             else
              %{----------------------------------------------------------------
              %  Not at minimum altitude index.
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
              %  Set the current true geodetic altitude to indexed value.
              %-----------------------------------------------------------------
                 trueGeodeticAltitudeMeters = altitudeIndex * 1000000.0E0;
              %}----------------------------------------------------------------
             end;
          %---------------------------------------------------------------------
          %  Convert the true geodetic coordinates into Earth Centered Earth
          %  Fixed (ECEF) noninertial coordinates.
          %---------------------------------------------------------------------
             [                                                               ...
               xEcefMeters,                                                  ...
               yEcefMeters,                                                  ...
               zEcefMeters                                                   ...
             ] = convertGeodeticToEcef                                       ...
                        (                                                    ...
                          earthEquatorialRadiusMeters,                       ...
                          earthEllipsoidalEccentricitySquared,               ...
                          trueGeodeticNorthGeodeticRadians,                  ...
                          specifiedFixedTrueEastGeocentricLongitudeRadians,  ...
                          trueGeodeticAltitudeMeters                         ...
                        );
          %---------------------------------------------------------------------
          %  Use Halley's third order iterative method
          %  (applying only one iteration) to approximate the solution of the
          %  fourth order nonlinear algebraic geodetic equations.
          %---------------------------------------------------------------------
             ecefToGeodeticConversionStatusEnumeration =                     ...
                           EcefToGeodeticConversionEnumerationClass.         ...
                           UNDETERMINED_CONVERSION_STATUS;
          %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
             estimatedGeodeticLatitudeRadians    = NaN;
             estimatedGeocentricLongitudeRadians = NaN;
             estimatedGeodeticAltitudeMeters     = NaN;
          %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
             tic( );
          %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
             [                                                               ...
               ecefToGeodeticConversionStatusEnumeration,                    ...
               estimatedGeodeticNorthLatitudeRadians,                        ...
               estimatedGeocentricEastLongitudeRadians,                      ...
               estimatedGeodeticAltitudeMeters                               ...
             ] = convertEcefToGeodetic                                       ...
                        (                                                    ...
                          earthEquatorialRadiusMeters,                       ...
                          earthEllipsoidalFlatteningFactor,                  ...
                          xEcefMeters,                                       ...
                          yEcefMeters,                                       ...
                          zEcefMeters                                        ...
                        );
          %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
             currentExecutionTimeSeconds = toc( );
             trialExecutionTimeSeconds   = trialExecutionTimeSeconds   +     ...
                                           currentExecutionTimeSeconds;
          %---------------------------------------------------------------------
             if(                                                             ...
                 ecefToGeodeticConversionStatusEnumeration ==                ...
                               EcefToGeodeticConversionEnumerationClass.     ...
                               CONVERSION_SUCCESSFUL                         ...
               )
              %{----------------------------------------------------------------
              %  Geocentric to Geodetic conversion was successful.
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
              %
              %  Compute the residuals:
              %
              %-----------------------------------------------------------------
                 deltaGeodeticLatitudeRadians =                              ...
                              trueGeodeticNorthGeodeticRadians -             ...
                              estimatedGeodeticNorthLatitudeRadians;
                 deltaGeodeticLatitudeMicroArcSec =                          ...
                              microArcSecondsPerRadian  *                    ...
                              deltaGeodeticLatitudeRadians;
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                 deltaGeodeticAltitudeMeters =                               ...
                              trueGeodeticAltitudeMeters -                   ...
                              estimatedGeodeticAltitudeMeters;
                 deltaGeodeticAltitudeNanoMeters  =                          ...
                              nanoMetersPerMeter *                           ...
                              deltaGeodeticAltitudeMeters;
              %-----------------------------------------------------------------
                 maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs =     ...
                   max                                                       ...
                    (                                                        ...
                      maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs, ...
                      abs( deltaGeodeticLatitudeMicroArcSec )                ...
                    );
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                 maximumGeodeticAltitudeAbsoluteErrorNanoMeters =            ...
                   max                                                       ...
                    (                                                        ...
                      maximumGeodeticAltitudeAbsoluteErrorNanoMeters,        ...
                      abs( deltaGeodeticAltitudeNanoMeters )                 ...
                    );
              %-----------------------------------------------------------------
              %  Output results.
              %-----------------------------------------------------------------
                 fprintf                                                     ...
                   (                                                         ...
                     STDOUT,                                                 ...
                     '%+19.10f %+18.5f  %+19.10e  %+18.10e\n',               ...
                     trueGeodeticNorthGeodeticDegrees,                       ...
                     trueGeodeticAltitudeMeters,                             ...
                     deltaGeodeticLatitudeMicroArcSec,                       ...
                     deltaGeodeticAltitudeNanoMeters                         ...
                   );
              %}----------------------------------------------------------------
             else
              %{----------------------------------------------------------------
              %  Geocentric to Geodetic conversion has failed.
              %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
              %  Generate an error message.
              %-----------------------------------------------------------------
                 if(                                                         ...
                     ecefToGeodeticConversionStatusEnumeration ==            ...
                                   EcefToGeodeticConversionEnumerationClass. ...
                                   INVALID_EARTH_ELLIPSOIDAL_FLATTENING      ...
                   )
                  %{------------------------------------------------------------
                  %  Encountered invalid Earth ellipsoidal flattening value.
                  %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                  %  Generate an error message.
                  %-------------------------------------------------------------
                     fprintf                                                 ...
                      (                                                      ...
                        STDOUT,                                              ...
                        [                                                    ...
                          '\n\n\n'                                           ...
                          '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'         ...
                          '%s\n%s\n'                                         ...
                          '%s%+20e\n'                                        ...
                          '%s\n%s\n'                                         ...
                          '\n\n\n'                                           ...
                        ],                                                   ...
                        '---------------------------------------------',     ...
                        '|',                                                 ...
                        '| ERROR:',                                          ...
                        '|',                                                 ...
                        '|   Encountered invalid Earth ellipsoidal',         ...
                        '|   flattening value.',                             ...
                        '|',                                                 ...
                        '|   The Earth ellipsoidal flattening values',       ...
                        '|   should be in the interval:',                    ...
                        '|     [ 0.0, 1.0 ).',                               ...
                        '|',                                                 ...
                        '|   The Earth ellipsoidal flattening value',        ...
                        '|   was:   ',                                       ...
                        earthEllipsoidalFlatteningFactor,                    ...
                        '|',                                                 ...
                        '---------------------------------------------'      ...
                      );
                  %}------------------------------------------------------------
                 elseif                                                      ...
                   (                                                         ...
                     ecefToGeodeticConversionStatusEnumeration ==            ...
                                   EcefToGeodeticConversionEnumerationClass. ...
                                   INVALID_EARTH_EQUATORIAL_RADIUS           ...
                   )
                  %{------------------------------------------------------------
                  %  Encountered invalid Earth equatorial radius.
                  %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                  %  Generate an error message.
                  %-------------------------------------------------------------
                     fprintf                                                 ...
                      (                                                      ...
                        STDOUT,                                              ...
                        [                                                    ...
                          '\n\n\n'                                           ...
                          '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'         ...
                          '%s\n'                                             ...
                          '%s%+20e%s\n'                                      ...
                          '%s\n%s\n'                                         ...
                          '\n\n\n'                                           ...
                        ],                                                   ...
                        '---------------------------------------------',     ...
                        '|',                                                 ...
                        '| ERROR:',                                          ...
                        '|',                                                 ...
                        '|   Encountered invalid Earth',                     ...
                        '|   equatorial radius value.',                      ...
                        '|',                                                 ...
                        '|   The Earth equatorial radius',                   ...
                        '|   value should be strictly positive.',            ...
                        '|',                                                 ...
                        '|   The Earth equatorial radius value',             ...
                        '|   was:   ',                                       ...
                        earthEquatorialRadiusMeters,                         ...
                        ' [meters]',                                         ...
                        '|',                                                 ...
                        '---------------------------------------------'      ...
                      );
                  %}------------------------------------------------------------
                 else
                  %{------------------------------------------------------------
                  %  Encountered undetermined Geodetic conversion error.
                  %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                  %  Generate an error message.
                  %-------------------------------------------------------------
                     fprintf                                                 ...
                      (                                                      ...
                        STDOUT,                                              ...
                        [                                                    ...
                          '\n\n\n'                                           ...
                          '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                 ...
                          '\n\n\n'                                           ...
                        ],                                                   ...
                        '---------------------------------------------',     ...
                        '|',                                                 ...
                        '| ERROR:',                                          ...
                        '|',                                                 ...
                        '|   Encountered undetermined Geodetic',             ...
                        '|   conversion error.',                             ...
                        '|',                                                 ...
                        '---------------------------------------------    '  ...
                      );
                      %}--------------------------------------------------------
                 end;
              %}----------------------------------------------------------------
             end;
          %---------------------------------------------------------------------
          %  End of altitude loop.
          %}--------------------------------------------------------------------
        end;
     %--------------------------------------------------------------------------
     %  End of latitude loop.
     %}-------------------------------------------------------------------------
   end;
%-------------------------------------------------------------------------------
%  Finish the output report.
%-------------------------------------------------------------------------------
   fprintf                                                                   ...
    (                                                                        ...
      STDOUT,                                                                ...
      '%s%s\n\n\n',                                                          ...
      '============================================',                        ...
      '============================================'                         ...
    );
%-------------------------------------------------------------------------------
   executionTimeOfTrialFunctionCallsMicroSeconds =                           ...
                       microSecondsPerSecond      *                          ...
                       trialExecutionTimeSeconds;
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
   fprintf                                                                   ...
    (                                                                        ...
      STDOUT,                                                                ...
      [                                                                      ...
        '\n\n\n'                                                             ...
        '%s%s\n'                                                             ...
        '%s\n%s\n%s\n%s\n'                                                   ...
        '%s%+10.2f%s\n'                                                      ...
        '%s\n'                                                               ...
        '%s%s\n'                                                             ...
        '\n\n\n'                                                             ...
      ],                                                                     ...
      "------------------------------------------------------------------",  ...
      "----------------------",                                              ...
      "|",                                                                   ...
      "| TRIAL TIMING RESULTS:",                                             ...
      "|",                                                                   ...
      "|   Cumulative execution time over all 'convertEcefToGeodetic'",      ...
      "|   function calls involved in current trial:-->",                    ...
      executionTimeOfTrialFunctionCallsMicroSeconds,                         ...
      " [microseconds]",                                                     ...
      "|",                                                                   ...
      "------------------------------------------------------------------",  ...
      "----------------------"                                               ...
    );
%-------------------------------------------------------------------------------
%  Finish the output report.
%-------------------------------------------------------------------------------
   fprintf                                                                   ...
    (                                                                        ...
      STDOUT,                                                                ...
      [                                                                      ...
        '%s%s'                                                               ...
        '\n\n\n',                                                            ...
      ],                                                                     ...
      '============================================',                        ...
      '============================================'                         ...
    );
%-------------------------------------------------------------------------------
   fprintf                                                                   ...
    (                                                                        ...
      STDOUT,                                                                ...
      [                                                                      ...
        '\n\n\n'                                                             ...
        '%s%s\n'                                                             ...
        '%s\n%s\n%s\n%s\n'                                                   ...
        '%s%+14.6e%s\n'                                                      ...
        '%s\n%s\n'                                                           ...
        '%s%+14.6e%s\n'                                                      ...
        '%s\n'                                                               ...
        '%s%s\n'                                                             ...
        '\n\n\n'                                                             ...
      ],                                                                     ...
      '============================================',                        ...
      '============================================',                        ...
      '|',                                                                   ...
      '|  MAXIMUM ABSOLUTE ERRORS OVER ONE TRIAL:',                          ...
      '|',                                                                   ...
      '|    Maximum geodetic north latitude absolute error',                 ...
      '|      is:-->',                                                       ...
       maximumGeodeticNorthLatitudeAbsoluteErrorMicroArcSecs,                ...
      ' [microarcseconds]',                                                  ...
      '|',                                                                   ...
      '|    Maximum geodetic altitude absolute error',                       ...
      '|      is:-->',                                                       ...
      maximumGeodeticAltitudeAbsoluteErrorNanoMeters,                        ...
      ' [nanometers]',                                                       ...
      '|',                                                                   ...
      '============================================',                        ...
      '============================================'                         ...
    );
%-------------------------------------------------------------------------------
   return;
%}------------------------------------------------------------------------------
