function                                                                     ...
[                                                                            ...
  ecefToGeodeticConversionStatusEnumeration,                                 ...
  estimatedGeodeticNorthLatitudeRadians,                                     ...
  estimatedGeocentricEastLongitudeRadians,                                   ...
  estimatedGeodeticAltitudeMeters                                            ...
] =                                                                          ...
convertEcefToGeodetic                                                        ...
       (                                                                     ...
         varargin                                                            ...
       )
%===============================================================================
%|
%|  FUNCTION:
%|    convertEcefToGeodetic 
%|
%|-----------------------------------------------------------------------------
%|
%|  PURPOSE:
%|
%|    Convert Earth Centered Earth Fixed (ECEF) rectangular coordinates
%|    to geodetic coordinates for a specified reference ellipsoid.
%|
%|-----------------------------------------------------------------------------
%|
%|  METHOD:
%|
%|    [ 1 ] Uses the economic third-order Halley's method to approximate
%|          a solution for the general non-linear geodetic equation
%|          numerically.
%|
%|    [ 2 ] Uses only  one iteration of the iterative Halley's method
%|          to achieve near double precision accuracy.
%|
%|    [ 3 ] Uses a technique to avoid division operations which significantly
%|          accelerates the backward transformation without degrading the
%|          precision.
%|
%|-----------------------------------------------------------------------------
%|
%|  INPUTS:
%|
%|    earthEquatorialRadiusMeters
%|      Length of Earth equatorial radius
%|      Also length of Earth ellipsoid semi-major axis.
%|      UNITS:  [meters]
%|      (See Note 2)
%|
%|    earthEllipsoidalFlatteningFactor
%|      Value of Earth ellipsoidal flattening factor, f.
%|      UNITS:  [nondimensional]
%|      (See Note 3)
%|
%|    xEcefMeters
%|    yEcefMeters
%|    zEcefMeters
%|      Earth Centered Earth Fixed (ECEF) rectangular coordinates
%|      UNITS:  [meters]
%|
%|-----------------------------------------------------------------------------
%|
%|  OUTPUTS:
%|
%|    ecefToGeodeticConversionStatusEnumeration
%|      A EcefToGeodeticConversionEnumerationClass enumeration value
%|      for the status of the ECEF to geodetic conversion function
%|      results.
%|
%|        EcefToGeodeticConversionEnumerationClass.
%|        SUCCESS_STATUS
%|          Conversion was successful.
%|
%|        EcefToGeodeticConversionEnumerationClass.
%|        UNDETERMINED_STATUS
%|          Conversion status undetermined.
%|
%|        EcefToGeodeticConversionEnumerationClass.
%|        INVALID_EARTH_ELLIPSOIDAL_FLATTENING
%|          Unacceptable value for Earth ellipsoidal
%|          flattening factor.
%|
%|        EcefToGeodeticConversionEnumerationClass.
%|        INVALID_EARTH_EQUATORIAL_RADIUS
%|          Unacceptable value for Earth equatorial
%|          radius length.
%|
%|    estimatedGeodeticNorthLatitudeRadians
%|      A variable to]contain the estimated North Geodetic latitude.
%|      Northern hemisphere is positive.
%|      UNITS:  [radians]
%|
%|    estimatedGeocentricEastLongitudeRadians
%|      A variable to contain the  estimated East Geocentric
%|      longitude.
%|      Eastward is positive.
%|      UNITS:  [radians]
%|
%|    estimatedGeodeticAltitudeMeters
%|      A variable to contain the estimated Geodetic altitude
%|      above the specified reference ellipsoid.
%|      UNITS:  [meters]
%|
%|-----------------------------------------------------------------------------
%|
%|  NOTE(s):
%|
%|    [ 1 ] This function is based on the FORTRAN subroutine gconv2h by
%|          Toshio Fukushima (see reference).
%|
%|    [ 2 ] The specified Earth equatorial radius length can be in any units,
%|          but meters is the conventional choice.
%|
%|    [ 3 ] The specified Earth ellipsoidal flattening factor, f,
%|          is (for the Earth) a value around 0.00335, (i.e. around 1/298).
%|
%|    [ 4 ] The input argument list is specified as Matlab 'varargin'
%|          so that this function can manage everything about the input
%|          argument list.
%|          If the input argument list was provided explicitly and a user
%|          provided too many input arguments, then Matlab would generate
%|          an error message and this function's error handling would
%|          never be invoked.
%|
%|------------------------------------------------------------------------------
%|
%|  AUTHOR(s):
%|
%|    [ 1 ]  Toshio Fukushima <Toshio.Fukushima@nao.ac.jp>
%|           National Astronomical Observatory of Japan (NAOJ)
%|           Address:  2-21-1, Ohsawa, Mitaka, Tokyo   181-8588,  Japan
%|           Phone:    +81-422-34-3613
%|
%|------------------------------------------------------------------------------
%|
%|  REFERENCE(s):
%|
%|    [ 1 ]  "Transformation from Cartesian to geodetic
%|            coordinates accelerated by Halley's method",
%|           Toshio Fukushima,
%|           Journal Of Geodesy (2006),
%|           Volume 79,
%|           Pages 689-693
%|
%|    [ 2 ]  "Fast transform from geocentric to geodetic coordinates",
%|           Toshio Fukushima,
%|           Journal Of Geodesy (1999),
%|           Volume 73,
%|           Pages 603â€“610
%|
%|    [ 3 ]  "Geometric Geodesy, Part A",
%|           "A set of lecture notes which are an introduction to
%|            ellipsoidal geometry related to geodesy.",
%|            R. E. Deakin and M. N. Hunter,
%|            School of Mathematical and Geospatial Sciences,
%|            RMIT University,
%|            Melbourne, Australia,
%|            January 2013
%|            www.mygeodesy.id.au/documents/Geometric%20Geodesy%20A(2013).pdf
%|
%|    [ 4 ]  'Various parameterizations of "latitude" equation -
%|            Cartesian to geodetic coordinates transformation',
%|            Marcin Ligas,
%|            Journal of Geodetic Science,
%|            Pages 87 - 94,
%|            2013
%|
%|    [ 5 ]  "In numerical analysis, Halley's method is a root-finding
%|            algorithm used for functions of one real variable with a
%|            continuous second derivative.",
%|           "The rate of convergence of the iterative Halley's method
%|            is cubic.",
%|           "There exist multidimensional versions of Halley's method.",
%|           wikipedia.org/wiki/Halley's_method`
%|
%|------------------------------------------------------------------------------
%|
%|  USAGE:
%|
%|    [                                                ...
%|      ecefToGeodeticConversionStatusEnumeration,     ...
%|      estimatedGeodeticNorthLatitudeRadians,         ...
%|      estimatedGeocentricEastLongitudeRadians,       ...
%|      estimatedGeodeticAltitudeMeters                ...
%|    ] = convertEcefToGeodetic                        ...
%|               (                                     ...
%|                 earthEquatorialRadiusMeters,        ...
%|                 earthEllipsoidalFlatteningFactor,   ...
%|                 xEcefMeters,                        ...
%|                 yEcefMeters,                        ...
%|                 zEcefMeters                         ...
%|               );
%|
%===============================================================================

%===============================================================================
%        1         2         3         4         5         6         7         8
%2345678901234567890123456789012345678901234567890123456789012345678901234567890
%===============================================================================

%{------------------------------------------------------------------------------
   expectedNumberInputArguments   =  5;
   expectedNumberOutputArguments  =  4;
%- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
     actualNumberInputArguments   =  nargin;
     actualNumberOutputArguments  =  nargout;
%-------------------------------------------------------------------------------
   if( actualNumberInputArguments == expectedNumberInputArguments )
    %{--------------------------------------------------------------------------
    %  Have encountered expected number of function input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Extract input arguments from variable input argument cell array.
    %---------------------------------------------------------------------------
       earthEquatorialRadiusMeters      = varargin{ 1 };
       earthEllipsoidalFlatteningFactor = varargin{ 2 };
       xEcefMeters                      = varargin{ 3 };
       yEcefMeters                      = varargin{ 4 };
       zEcefMeters                      = varargin{ 5 };
    %---------------------------------------------------------------------------
    %  Check number of function output arguments.
    %---------------------------------------------------------------------------
       if( actualNumberOutputArguments == expectedNumberOutputArguments )
        %{----------------------------------------------------------------------
        %  Have encountered expected number of function output arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Continue geodetic conversion processing.
        %-----------------------------------------------------------------------
           [                                                                 ...
             ecefToGeodeticConversionStatusEnumeration,                      ...
             estimatedGeodeticNorthLatitudeRadians,                          ...
             estimatedGeocentricEastLongitudeRadians,                        ...
             estimatedGeodeticAltitudeMeters                                 ...
           ] = continueEcefToGeodeticConversionProcessing                    ...
                       (                                                     ...
                         earthEquatorialRadiusMeters,                        ...
                         earthEllipsoidalFlatteningFactor,                   ...
                         xEcefMeters,                                        ...
                         yEcefMeters,                                        ...
                         zEcefMeters                                         ...
                       );
        %}----------------------------------------------------------------------
       else
        %{----------------------------------------------------------------------
        %  Have not encountered expected number of function output arguments.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Generate a purpose message.
        %-----------------------------------------------------------------------
           generateConvertEcefToGeodeticPurposeMessage(  );
        %-----------------------------------------------------------------------
        %  Generate a usage message.
        %-----------------------------------------------------------------------
           generateConvertEcefToGeodeticUsageMessage(  );
        %-----------------------------------------------------------------------
        %  Generate an error message.
        %-----------------------------------------------------------------------
           STDOUT = 1;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           fprintf                                                           ...
           (                                                                 ...
             STDOUT,                                                         ...
             [                                                               ...
               '\n\n\n'                                                      ...
               '%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                                ...
               '%s%d\n'                                                      ...
               '%s%d\n'                                                      ...
               '%s\n%s\n%s\n%s\n'                                            ...
               '\n\n\n'                                                      ...
             ],                                                              ...
             '============================================================', ...
             '|',                                                            ...
             '|  ERROR:',                                                    ...
             '|',                                                            ...
             '|    Have encountered unexpected number function output',      ...
             '|    arguments.',                                              ...
             '|',                                                            ...
             '|    Expected number function output arguments:-->',           ...
             expectedNumberOutputArguments,                                  ...
             '|      Actual number function output arguments:-->',           ...
               actualNumberOutputArguments,                                  ...
             '|',                                                            ...
             '|    This is an error.',                                       ...
             '|',                                                            ...
             '============================================================'  ...
           );
        %-----------------------------------------------------------------------
        %  Terminate the program.
        %-----------------------------------------------------------------------
           error                                                             ...
             (                                                               ...
               [                                                             ...
                 'Have encountered unexpected number of function '           ...
                 'output arguments.'                                         ...
               ]                                                             ...
             );
        %}----------------------------------------------------------------------
       end;
    %}--------------------------------------------------------------------------
   else
    %{--------------------------------------------------------------------------
    %  Have not encountered expected number of function input arguments.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Generate a purpose message.
    %---------------------------------------------------------------------------
       generateConvertEcefToGeodeticPurposeMessage(  );
    %---------------------------------------------------------------------------
    %  Generate a usage message.
    %---------------------------------------------------------------------------
       generateConvertEcefToGeodeticUsageMessage(  );
    %---------------------------------------------------------------------------
    %  Generate an error message.
    %---------------------------------------------------------------------------
       STDOUT = 1;
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       fprintf                                                               ...
       (                                                                     ...
         STDOUT,                                                             ...
         [                                                                   ...
           '\n\n\n'                                                          ...
           '%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                                    ...
           '%s%d\n'                                                          ...
           '%s%d\n'                                                          ...
           '%s\n%s\n%s\n%s\n'                                                ...
           '\n\n\n'                                                          ...
         ],                                                                  ...
         '============================================================',     ...
         '|',                                                                ...
         '|  ERROR:',                                                        ...
         '|',                                                                ...
         '|    Have encountered unexpected number function input',           ...
         '|    arguments.',                                                  ...
         '|',                                                                ...
         '|    Expected number function input arguments:-->',                ...
         expectedNumberInputArguments,                                       ...
         '|      Actual number function input arguments:-->',                ...
           actualNumberInputArguments,                                       ...
         '|',                                                                ...
         '|    This is an error.',                                           ...
         '|',                                                                ...
         '============================================================'      ...
       );
    %---------------------------------------------------------------------------
    %  Terminate the program.
    %---------------------------------------------------------------------------
       error                                                                 ...
        ( 'Have encountered unexpected number of function input arguments.' );
    %}--------------------------------------------------------------------------
   end;
%------------------------------------------------------------------------------- 
   return;
%}------------------------------------------------------------------------------

%===============================================================================
function                                                                     ...
[                                                                            ...
  ecefToGeodeticConversionStatusEnumeration,                                 ...
  estimatedGeodeticNorthLatitudeRadians,                                     ...
  estimatedGeocentricEastLongitudeRadians,                                   ...
  estimatedGeodeticAltitudeMeters                                            ...
] =                                                                          ...
continueEcefToGeodeticConversionProcessing                                   ...
        (                                                                    ...
          earthEquatorialRadiusMeters,                                       ...
          earthEllipsoidalFlatteningFactor,                                  ...
          xEcefMeters,                                                       ...
          yEcefMeters,                                                       ...
          zEcefMeters                                                        ...
        )
%{------------------------------------------------------------------------------
   ecefToGeodeticConversionStatusEnumeration =                               ...
                 EcefToGeodeticConversionEnumerationClass.                   ...
                 UNDETERMINED_CONVERSION_STATUS;
   estimatedGeodeticNorthLatitudeRadians     = NaN; 
   estimatedGeocentricEastLongitudeRadians   = NaN;
   estimatedGeodeticAltitudeMeters           = NaN;
%-------------------------------------------------------------------------------
%  Validate specified ellipsoid parameters.
%-------------------------------------------------------------------------------
   if(                                                                       ...
       ( earthEllipsoidalFlatteningFactor >= 0.0 )                           ...
       &&                                                                    ...
       ( earthEllipsoidalFlatteningFactor <  1.0 )                           ...
     )
    %{--------------------------------------------------------------------------
    %  The specified Earth ellipsoidal flattening factor parameter value
    %  is valid.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Continue validating the specified ellipsoid parameters.
    %---------------------------------------------------------------------------
       if( earthEquatorialRadiusMeters > 0.0 )
        %{----------------------------------------------------------------------
        %  The Earth ellipsoid equatorial radius (major semiaxis length)
        %  parameter value is valid.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Determine functions of the ellipsoid parameters.
        %-----------------------------------------------------------------------
           earthEquatorialRadiusInverse = 1.0 / earthEquatorialRadiusMeters;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           epsilon       = 1.0e-16;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           aEps          = earthEquatorialRadiusMeters * epsilon;
           aEpsSquared   = aEps * aEps;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           earthEllipticitySquared                                           ...
                         = ( 2.0 - earthEllipsoidalFlatteningFactor ) *      ...
                                   earthEllipsoidalFlatteningFactor;
           earthEllipticityForth                                             ...
                         = earthEllipticitySquared * earthEllipticitySquared;
           oneAndHalf_e4 = 1.5 * earthEllipticityForth;
           complimentaryEarthEllipticitySquared                              ...
                         = 1.0 - earthEllipticitySquared;
        %----------------------------------------------------------------------
        %
        %  NOTE:
        %
        %    The fact that the Earth ellipsoidal flattening factor parameter
        %    is valid guarantees that the squared complementary ellipsoidal
        %    parameter value ecSquared is strictly positive.
        %    We will check that the ecSquared value is strictly positive here
        %    anyway.
        %
        %-----------------------------------------------------------------------
           if( complimentaryEarthEllipticitySquared > 0.0 )
            %{------------------------------------------------------------------
            %  The squared complementary Earth ellipsoid parameter is valid.
            %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            %  Proceed with the geodetic computation.
            %-------------------------------------------------------------------
               complimentaryEarthEllipticity =                               ...
                            sqrt( complimentaryEarthEllipticitySquared );
               earthPolarRadiusMeters        =                               ...
                            complimentaryEarthEllipticity *                  ...
                            earthEquatorialRadiusMeters;
            %-------------------------------------------------------------------
            %  Distance from Earth polar axis squared.
            %-------------------------------------------------------------------
               earthPolarAxisDistanceSquared =                               ...
                          ( xEcefMeters * xEcefMeters ) +                    ...
                          ( yEcefMeters * yEcefMeters );
            %-------------------------------------------------------------------
            %  Determine Geocentric Longitude [radians].
            %-------------------------------------------------------------------
               if( earthPolarAxisDistanceSquared > 0.0 )
                %{--------------------------------------------------------------
                %  Distance from Earth polar axis is positive.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                %  Compute the geocentric longitude.
                %---------------------------------------------------------------
                   estimatedGeocentricEastLongitudeRadians = atan2           ...
                                                              (              ...
                                                                yEcefMeters, ...
                                                                xEcefMeters  ...
                                                              );
                %}--------------------------------------------------------------
               else
                %{--------------------------------------------------------------
                %  Currently on the Earth polar axis.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                %  Set the geocentric longitude to zero.
                %---------------------------------------------------------------
                   estimatedGeocentricEastLongitudeRadians = 0.0;
                %}--------------------------------------------------------------
               end;
            %-------------------------------------------------------------------
            %  Absolute Rectangular z-coordinate.
            %-------------------------------------------------------------------
               absZ = abs( zEcefMeters );
            %-------------------------------------------------------------------
               if( earthPolarAxisDistanceSquared > aEpsSquared )
                %{--------------------------------------------------------------
                %  The specified Geocentric coordinates are sufficiently far
                %  from the Earth polar axis for normal geodetic processing.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                %  Determine distance from the Earth polar axis.
                %---------------------------------------------------------------
                   earthPolarAxisDistanceMeters =                            ...
                             sqrt( earthPolarAxisDistanceSquared );
                %---------------------------------------------------------------
                % 
                %  Perform normalization.
                % 
                %---------------------------------------------------------------
                %  This is from Equation (2)  on Page 690 and
                %               Equation (17) on Page 691 of
                %  Reference [ 1 ].
                %  Here the factor of ec in Equation (2) is missing.
                %---------------------------------------------------------------
                   S0 = absZ * earthEquatorialRadiusInverse;
                %---------------------------------------------------------------
                %  This is Equation (2) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   Pn = earthPolarAxisDistanceMeters  *                      ...
                        earthEquatorialRadiusInverse;
                   zc = complimentaryEarthEllipticity * S0;

                %===============================================================
                % 
                %  Prepare the Newton correction factors.
                % 
                %===============================================================

                %---------------------------------------------------------------
                %  This is Equation (17) on Page 691 of Reference [ 1 ].
                %---------------------------------------------------------------
                   C0        = complimentaryEarthEllipticity * Pn;
                %---------------------------------------------------------------
                   C0Squared = C0  * C0;
                   C0Cubed   = C0 * C0Squared;
                %---------------------------------------------------------------
                   S0Squared = S0 * S0;
                   S0Cubed   = S0 * S0Squared;
                %---------------------------------------------------------------
                %  This is Equation (14) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   A0Squared = C0Squared + S0Squared;
                   A0        = sqrt( A0Squared );
                   A0Cubed   = A0 * A0Squared;
                %---------------------------------------------------------------
                %  This is Equation (12) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   D0        = ( zc                       * A0Cubed ) +      ...
                               (  earthEllipticitySquared * S0Cubed );
                %---------------------------------------------------------------
                %  This is Equation (13) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   F0        = (  Pn                      * A0Cubed ) +      ...
                               ( -earthEllipticitySquared * C0Cubed );

                %===============================================================
                % 
                %  Prepare the Halley correction factors.
                % 
                %===============================================================

                %---------------------------------------------------------------
                %  This is Equation (15) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   B0  = oneAndHalf_e4 *                                     ...
                         S0Squared     *                                     ...
                         C0Squared     *                                     ...
                         Pn            *                                     ...
                         ( A0 - complimentaryEarthEllipticity );
                %---------------------------------------------------------------
                %  This is Equation (10) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   S1  = ( D0 * F0 ) + ( -B0 * S0 );
                %---------------------------------------------------------------
                %  This is Equation (11) on Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   C1  = ( F0 * F0 ) + ( -B0 * C0 );
                %---------------------------------------------------------------
                %  This is Equation (21) on Page 691 of Reference [ 1 ].
                %---------------------------------------------------------------
                   Cc  = complimentaryEarthEllipticity * C1;

                %===============================================================
                % 
                %  Evaluate geodetic latitude.
                % 
                %===============================================================

                %---------------------------------------------------------------
                %  This is Equation (19) on Page 691 of Reference [ 1 ].
                %---------------------------------------------------------------
                   estimatedGeodeticNorthLatitudeRadians = atan2( S1, Cc );

                %===============================================================
                % 
                %  Evaluate geodetic altitude.
                %  
                %===============================================================

                   S1Squared = S1 * S1;
                   CcSquared = Cc * Cc;
                %---------------------------------------------------------------
                %  The quantity a1 is ec times A1.
                %  The quantity A1 is given by Equation (14) on
                %  Page 690 of Reference [ 1 ].
                %---------------------------------------------------------------
                   a1 = sqrt(                                                ...
                              (                                              ...
                                complimentaryEarthEllipticitySquared *       ...
                                S1Squared                                    ...
                              )                                              ...
                              +                                              ...
                              CcSquared                                      ...
                            );
                %---------------------------------------------------------------
                %  This is Equation (20) on Page 691 of Reference [ 1 ].
                %---------------------------------------------------------------
                   estimatedGeodeticAltitudeMeters =                         ...
                          (                                                  ...
                            (  earthPolarAxisDistanceMeters * Cc ) +         ...
                            (  absZ                         * S1 ) +         ...
                            ( -earthEquatorialRadiusMeters  * a1 )           ...
                          ) / sqrt( CcSquared + S1Squared );
                %}--------------------------------------------------------------
               else
                %{--------------------------------------------------------------
                %  The specified Geocentric coordinates are very near
                %  the Earth polar axis.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - 
                %  Apply exceptional processing for the Earth polar axis
                %  vincinity.
                %---------------------------------------------------------------
                   halfPi                                = pi / 2.0;
                   estimatedGeodeticNorthLatitudeRadians = halfPi;
                   estimatedGeodeticAltitudeMeters       =                   ...
                                                    absZ -                   ...
                                                    earthPolarRadiusMeters;
                %}--------------------------------------------------------------
               end;
            %-------------------------------------------------------------------
               if( zEcefMeters < 0.0 )
                %{--------------------------------------------------------------
                %  The specified Geocentric z coordinate is negative.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                %  The specified Geocentric coorindates must be in the
                %  Southern Hemisphere.
                %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
                %  Change the sign of the computed Geodetic Latitude.
                %---------------------------------------------------------------
                   estimatedGeodeticNorthLatitudeRadians =                   ...
                                 -estimatedGeodeticNorthLatitudeRadians;
                %}--------------------------------------------------------------
               end;
            %-------------------------------------------------------------------
            %  Set the success function status.
            %-------------------------------------------------------------------
               ecefToGeodeticConversionStatusEnumeration =                   ...
                             EcefToGeodeticConversionEnumerationClass.       ...
                             CONVERSION_SUCCESSFUL;
            %}------------------------------------------------------------------
           else
            %{------------------------------------------------------------------
            %  The squared complementary Earth ellipsoid parameter is invalid.
            %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
            %  Generate a purpose message.
            %-------------------------------------------------------------------
               generateConvertEcefToGeodeticPurposeMessage(  );
            %-------------------------------------------------------------------
            %  Generate a usage message.
            %-------------------------------------------------------------------
               generateConvertEcefToGeodeticUsageMessage(  );
            %-------------------------------------------------------------------
            %  Generate an error message.
            %-------------------------------------------------------------------
               STDOUT = 1;
            %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
               fprintf                                                       ...
               (                                                             ...
                 STDOUT,                                                     ...
                 [                                                           ...
                   '\n\n\n'                                                  ...
                   '%s%s\n'                                                  ...
                   '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                    ...
                   '%s\n'                                                    ...
                   '%s%14.6e\n',                                             ...
                   '%s\n%s\n%s\n'                                            ...
                   '%s%s\n'                                                  ...
                   '\n\n\n'                                                  ...
                 ],                                                          ...
                 '====================================================',     ...
                 '========',                                                 ...
                 '|',                                                        ...
                 '|  ERROR:',                                                ...
                 '|',                                                        ...
                 '|    The squared complementary Earth ellipsoid',           ...
                 '|    parameter value is invalid.',                         ...
                 '|',                                                        ...
                 '|    Expected strictly positive squared complementary',    ...
                 '|    Earth ellipsoid parameter value.',                    ...
                 '|',                                                        ...
                 '|    Squared complementary Earth ellipsoid parameter',     ...
                 '|    value is:-->',                                        ...
                 complimentaryEarthEllipticitySquared,                       ...
                 '|',                                                        ...
                 '|    This is an error.',                                   ...
                 '|',                                                        ...
                 '====================================================',     ...
                 '========'                                                  ...
               );
            %-------------------------------------------------------------------
            %  Set the error function status.
            %-------------------------------------------------------------------
               ecefToGeodeticConversionStatusEnumeration =                   ...
                             EcefToGeodeticConversionEnumerationClass.       ...
                             INVALID_EARTH_ELLIPSOIDAL_FLATTENING;
            %}------------------------------------------------------------------
           end;
        %}----------------------------------------------------------------------
       else
        %{----------------------------------------------------------------------
        %  The Earth ellipsoid equatorial radius (major semiaxis length)
        %  parameter value is invalid.
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
        %  Generate a purpose message.
        %-----------------------------------------------------------------------
           generateConvertEcefToGeodeticPurposeMessage(  );
        %-----------------------------------------------------------------------
        %  Generate a usage message.
        %-----------------------------------------------------------------------
           generateConvertEcefToGeodeticUsageMessage(  );
        %-----------------------------------------------------------------------
        %  Generate an error message.
        %-----------------------------------------------------------------------
           STDOUT = 1;
        %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
           fprintf                                                           ...
           (                                                                 ...
             STDOUT,                                                         ...
             [                                                               ...
               '\n\n\n'                                                      ...
               '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                    ...
               '%s\n'                                                        ...
               '%s%14.6e%s\n'                                                ...
               '%s\n%s\n%s\n%s\n'                                            ...
               '\n\n\n'                                                      ...
             ],                                                              ...
             '============================================================', ...
             '|',                                                            ...
             '|  ERROR:',                                                    ...
             '|',                                                            ...
             '|    The specified Earth ellipsoidal equatorial radius',       ...
             '|    (major semiaxis length) value is invalid.',               ...
             '|',                                                            ...
             '|    Expected Earth ellipsoidal equatorial radius value',      ...
             '|    to be strictly positive.',                                ...
             '|',                                                            ...
             '|    Specified Earth ellipsoidal equatorial radius',           ...
             '|    value is:-->',                                            ...
             earthEquatorialRadiusMeters,                                    ...
             ' [meters]',                                                    ...
             '|',                                                            ...
             '|    This is an error.',                                       ...
             '|',                                                            ...
             '============================================================'  ...
           );
        %-----------------------------------------------------------------------
        %  Set the error function status.
        %-----------------------------------------------------------------------
           ecefToGeodeticConversionStatusEnumeration =                       ...
                         EcefToGeodeticConversionEnumerationClass.           ...
                         INVALID_EARTH_EQUATORIAL_RADIUS;
        %}----------------------------------------------------------------------
       end;
    %}--------------------------------------------------------------------------
   else
    %{--------------------------------------------------------------------------
    %  The specified Earth ellipsoidal flattening factor parameter value
    %  is invalid.
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
    %  Generate a purpose message.
    %---------------------------------------------------------------------------
       generateConvertEcefToGeodeticPurposeMessage(  );
    %---------------------------------------------------------------------------
    %  Generate a usage message.
    %---------------------------------------------------------------------------
       generateConvertEcefToGeodeticUsageMessage(  );
    %---------------------------------------------------------------------------
    %  Generate an error message.
    %---------------------------------------------------------------------------
       STDOUT = 1;
    %- - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - - -
       fprintf                                                               ...
       (                                                                     ...
         STDOUT,                                                             ...
         [                                                                   ...
           '\n\n\n'                                                          ...
           '%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n%s\n'                        ...
           '%s\n'                                                            ...
           '%s%14.6e\n',                                                     ...
           '%s\n%s\n%s\n%s\n'                                                ...
           '\n\n\n'                                                          ...
         ],                                                                  ...
         '============================================================',     ...
         '|',                                                                ...
         '|  ERROR:',                                                        ...
         '|',                                                                ...
         '|    The specified Earth ellipsoidal flattening factor',           ...
         '|    parameter value is invalid.',                                 ...
         '|',                                                                ...
         '|    Expected Earth ellipsoidal flattening factor',                ...
         '|    parameter value to be in the interval:  [ 0.0, 1.0 ).',       ...
         '|',                                                                ...
         '|    Specified Earth ellipsoidal flattening factor',               ...
         '|    parameter value is:-->',                                      ...
         earthEllipsoidalFlatteningFactor,                                   ...
         '|',                                                                ...
         '|    This is an error.',                                           ...
         '|',                                                                ...
         '============================================================'      ...
       );
    %---------------------------------------------------------------------------
    %  Set the error function status.
    %---------------------------------------------------------------------------
       ecefToGeodeticConversionStatusEnumeration =                           ...
                     EcefToGeodeticConversionEnumerationClass.               ...
                     INVALID_EARTH_ELLIPSOIDAL_FLATTENING;
    %}--------------------------------------------------------------------------
   end;
%------------------------------------------------------------------------------- 
   return;
%}------------------------------------------------------------------------------

